{"pageProps":{"post":{"date":1586251869662,"slug":"mianshiti.js","content":"<pre> <code class=\"hljs\" ><span class=\"hljs-comment\">/**\n * 业务需求中，经常有发起请求后，必须等待上一次请求结束才能执行下一次请求的需求。\n * 编写一个高阶函数，传递旧请求方法（执行后返回promise），返回一个新方法。连续触发时，\n * 若首次promise未执行完，后续promise直接废弃（不执行then/catch）\n * @param promiseFunction\n */</span>\n\nlet firstPromise = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(promiseFunction)</span> </span>{\n    let token = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(<span class=\"hljs-rest_arg\">...arguments</span>)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Promise((resolve, reject) =&gt; {\n            <span class=\"hljs-keyword\">if</span> (token) {\n                <span class=\"hljs-keyword\">return</span>\n            }\n            token = <span class=\"hljs-literal\">true</span>;\n            promiseFunction.apply(<span class=\"hljs-keyword\">this</span>, arguments)\n                .then(resolve)\n                .catch(reject)\n                .finally(() =&gt; {\n                    <span class=\"hljs-comment\">//finally需要考虑垫片</span>\n                    token = <span class=\"hljs-literal\">false</span>\n                })\n        })\n    }\n}\n</code> </pre>"}},"__N_SSG":true}