{"pageProps":{"post":{"date":1586402621382,"slug":"146. LRU缓存机制.js","content":"<pre> <code class=\"hljs\" ><span class=\"hljs-comment\">/**\n * @param {number} capacity\n */</span>\nvar LRUCache = function (capacity) {\n    <span class=\"hljs-keyword\">this</span>.capacity = capacity;\n    <span class=\"hljs-keyword\">this</span>.zhan = []\n};\n\n<span class=\"hljs-comment\">/**\n * @param {number} key\n * @return {number}\n */</span>\nLRUCache.prototype.<span class=\"hljs-built_in\">get</span> = function (<span class=\"hljs-built_in\">key</span>) {\n    let value = <span class=\"hljs-number\">-1</span>;\n    <span class=\"hljs-keyword\">for</span> (let i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-keyword\">this</span>.zhan.length; i++) {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.zhan[i].<span class=\"hljs-built_in\">key</span> === <span class=\"hljs-built_in\">key</span>) {\n            <span class=\"hljs-comment\">//当前key 又更新了，所以改变它的位置到栈顶</span>\n            value = <span class=\"hljs-keyword\">this</span>.zhan[i].value;\n            <span class=\"hljs-keyword\">this</span>.zhan.<span class=\"hljs-built_in\">splice</span>(i, <span class=\"hljs-number\">1</span>);\n            <span class=\"hljs-keyword\">this</span>.zhan.push({<span class=\"hljs-built_in\">key</span>: <span class=\"hljs-built_in\">key</span>, value: value});\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> value\n};\n\n<span class=\"hljs-comment\">/**\n * @param {number} key\n * @param {number} value\n * @return {void}\n */</span>\nLRUCache.prototype.put = function (<span class=\"hljs-built_in\">key</span>, value) {\n\n<span class=\"hljs-comment\">//    查看zhan中是否已经存在这个元素，如果存在，把该元素拿到栈顶；如果不存在就走下面的逻辑-&gt;判断栈是否已满</span>\n    let index = <span class=\"hljs-number\">-1</span>;\n\n    <span class=\"hljs-keyword\">for</span> (let i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-keyword\">this</span>.zhan.length; i++) {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.zhan[i].<span class=\"hljs-built_in\">key</span> === <span class=\"hljs-built_in\">key</span>) {\n            index = i;\n            <span class=\"hljs-keyword\">break</span>;\n        }\n    }\n\n    <span class=\"hljs-keyword\">if</span> (index !== <span class=\"hljs-number\">-1</span>) {\n        <span class=\"hljs-keyword\">this</span>.zhan.<span class=\"hljs-built_in\">splice</span>(index, <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">this</span>.zhan.push({<span class=\"hljs-built_in\">key</span>: <span class=\"hljs-built_in\">key</span>, value: value})\n    } <span class=\"hljs-keyword\">else</span> {\n<span class=\"hljs-comment\">//    如果长度够，则直接放；如果长度不够了，则把栈低的推出，将该元素推进栈顶 [1,2,3,4,5]</span>\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.zhan.length === <span class=\"hljs-keyword\">this</span>.capacity) {\n            <span class=\"hljs-keyword\">this</span>.zhan.shift();\n        }\n        <span class=\"hljs-keyword\">this</span>.zhan.push({<span class=\"hljs-built_in\">key</span>: <span class=\"hljs-built_in\">key</span>, value: value})\n    }\n};\n\n<span class=\"hljs-comment\">/**\n * Your LRUCache object will be instantiated and called as such:\n * var obj = new LRUCache(capacity)\n * var param_1 = obj.get(key)\n * obj.put(key,value)\n */</span>\n\n<span class=\"hljs-comment\">/*\nlet cache = new LRUCache(2);\ncache.put(2, 1);\ncache.put(2, 2);\nconsole.log(cache.get(2));       // 返回  1\ncache.put(1, 1);    // 该操作会使得密钥 2 作废\nconsole.log(cache, 68);\ncache.put(4, 1);    // 该操作会使得密钥 1 作废\nconsole.log(cache, 71);\nconsole.log(cache.get(2));       // 返回 -1 (未找到)\n*/</span>\n\n<span class=\"hljs-comment\">//利用Hash 写一遍</span>\n\nlet LRUCache2 = function (capacity) {\n    <span class=\"hljs-keyword\">this</span>.capacity = capacity;\n    <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span> = <span class=\"hljs-keyword\">new</span> Map();\n};\n\n\nLRUCache2.prototype.put = function (<span class=\"hljs-built_in\">key</span>, value) {\n    <span class=\"hljs-comment\">//创建或者更新</span>\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.has(<span class=\"hljs-built_in\">key</span>)) {\n        <span class=\"hljs-comment\">//    删掉旧值，重新set</span>\n        <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.delete(<span class=\"hljs-built_in\">key</span>)\n        <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.<span class=\"hljs-built_in\">set</span>(<span class=\"hljs-built_in\">key</span>, value)\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.<span class=\"hljs-built_in\">size</span> === <span class=\"hljs-keyword\">this</span>.capacity) {\n            <span class=\"hljs-comment\">//    去掉第一个，然后直接set新值即可</span>\n            let first_key = <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.keys().next().value;\n            <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.delete(first_key);\n            <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.<span class=\"hljs-built_in\">set</span>(<span class=\"hljs-built_in\">key</span>, value)\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.<span class=\"hljs-built_in\">set</span>(<span class=\"hljs-built_in\">key</span>, value)\n        }\n    }\n}\n\nLRUCache2.prototype.<span class=\"hljs-built_in\">get</span> = function (<span class=\"hljs-built_in\">key</span>) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.has(<span class=\"hljs-built_in\">key</span>)) {\n        let value = <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-built_in\">key</span>);\n        <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.delete(<span class=\"hljs-built_in\">key</span>);\n        <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-built_in\">map</span>.<span class=\"hljs-built_in\">set</span>(<span class=\"hljs-built_in\">key</span>, value);\n        <span class=\"hljs-keyword\">return</span> value;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n    }\n}\n\nlet cache2 = <span class=\"hljs-keyword\">new</span> LRUCache2(<span class=\"hljs-number\">2</span>);\ncache2.put(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>);\ncache2.put(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>);\nconsole.<span class=\"hljs-built_in\">log</span>(cache2)\nconsole.<span class=\"hljs-built_in\">log</span>(cache2.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-number\">1</span>));       <span class=\"hljs-comment\">// 返回  1</span>\nconsole.<span class=\"hljs-built_in\">log</span>(cache2)\ncache2.put(<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>);    <span class=\"hljs-comment\">// 该操作会使得密钥 2 作废</span>\nconsole.<span class=\"hljs-built_in\">log</span>(cache2)\nconsole.<span class=\"hljs-built_in\">log</span>(cache2.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-number\">2</span>));       <span class=\"hljs-comment\">// 返回 -1 (未找到)</span>\ncache2.put(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>);    <span class=\"hljs-comment\">// 该操作会使得密钥 1 作废</span>\nconsole.<span class=\"hljs-built_in\">log</span>(cache2)\ncache2.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-number\">1</span>);       <span class=\"hljs-comment\">// 返回 -1 (未找到)</span>\ncache2.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-number\">3</span>);       <span class=\"hljs-comment\">// 返回  3</span>\nconsole.<span class=\"hljs-built_in\">log</span>(cache2.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-number\">4</span>));       <span class=\"hljs-comment\">// 返回  4</span>\n</code> </pre>"}},"__N_SSG":true}