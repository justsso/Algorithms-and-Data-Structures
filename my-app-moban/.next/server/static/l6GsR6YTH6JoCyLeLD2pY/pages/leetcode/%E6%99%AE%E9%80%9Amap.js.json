{"pageProps":{"post":{"date":"2021 / 3 / 1","slug":"普通map.js","content":"<pre> <code class=\"hljs\" ><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Mymap</span>(<span class=\"hljs-params\"></span>) </span>{  <span class=\"hljs-comment\">//构造函数</span>\n    <span class=\"hljs-keyword\">this</span>.init();\n}\n\n<span class=\"hljs-comment\">//初始化函数，创建桶（数组），每个位置都是一个对象，每个对象的属性上设置next属性，并且初始化为null。</span>\nMymap.prototype.init = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">this</span>.tong = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>(<span class=\"hljs-number\">8</span>);\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">8</span>; i++) {\n        <span class=\"hljs-keyword\">this</span>.tong[i] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Object</span>();\n        <span class=\"hljs-keyword\">this</span>.tong[i].next = <span class=\"hljs-literal\">null</span>;\n    }\n};\n<span class=\"hljs-comment\">//添加数据。</span>\nMymap.prototype.set = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key, value</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-keyword\">this</span>.hash(key);        <span class=\"hljs-comment\">//获取到当前设置的key设置到那个位置上</span>\n    <span class=\"hljs-keyword\">var</span> TempBucket = <span class=\"hljs-keyword\">this</span>.tong[index]; <span class=\"hljs-comment\">//获取当前位置的对象</span>\n    <span class=\"hljs-keyword\">while</span> (TempBucket.next) {          <span class=\"hljs-comment\">//遍历如果当前对象链接的下一个不为空</span>\n        <span class=\"hljs-keyword\">if</span> (TempBucket.next.key === key) {  <span class=\"hljs-comment\">//如果要设置的属性已经存在，覆盖其值。</span>\n            TempBucket.next.value = value;\n            <span class=\"hljs-keyword\">return</span>;                          <span class=\"hljs-comment\">//return ,不在继续遍历</span>\n        } <span class=\"hljs-keyword\">else</span> {\n            TempBucket = TempBucket.next;  <span class=\"hljs-comment\">//把指针指向下一个对象。</span>\n        }\n\n    }\n    TempBucket.next = {  <span class=\"hljs-comment\">//对象的next是null ,添加对象。</span>\n        <span class=\"hljs-attr\">key</span>: key,\n        <span class=\"hljs-attr\">value</span>: value,\n        <span class=\"hljs-attr\">next</span>: <span class=\"hljs-literal\">null</span>\n    }\n};\n\n<span class=\"hljs-comment\">//查询数据</span>\nMymap.prototype.get = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-keyword\">this</span>.hash(key);\n    <span class=\"hljs-keyword\">var</span> TempBucket = <span class=\"hljs-keyword\">this</span>.tong[index];\n    <span class=\"hljs-keyword\">while</span> (TempBucket) {\n        <span class=\"hljs-keyword\">if</span> (TempBucket.key == key) {\n            <span class=\"hljs-keyword\">return</span> TempBucket.value;\n        } <span class=\"hljs-keyword\">else</span> {\n            TempBucket = TempBucket.next;\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">undefined</span>;\n}\n\n<span class=\"hljs-comment\">//删除数据</span>\nMymap.prototype.delete = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-keyword\">this</span>.hash(key);\n    <span class=\"hljs-keyword\">var</span> TempBucket = <span class=\"hljs-keyword\">this</span>.tong[index];\n    <span class=\"hljs-keyword\">while</span> (TempBucket) {\n        <span class=\"hljs-keyword\">if</span> (TempBucket.next.key === key) {\n            TempBucket.next = TempBucket.next.next;\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        } <span class=\"hljs-keyword\">else</span> {\n            TempBucket = TempBucket.next;\n        }\n    }\n}\n<span class=\"hljs-comment\">//看当前属性是否存在</span>\nMymap.prototype.has = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-keyword\">this</span>.hash(key);\n    <span class=\"hljs-keyword\">var</span> TempBucket = <span class=\"hljs-keyword\">this</span>.tong[index];\n    <span class=\"hljs-keyword\">while</span> (TempBucket) {\n        <span class=\"hljs-keyword\">if</span> (TempBucket.key == key) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        } <span class=\"hljs-keyword\">else</span> {\n            TempBucket = TempBucket.next;\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n}\n<span class=\"hljs-comment\">//清空这个map</span>\nMymap.prototype.clear = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">this</span>.init();\n}\n<span class=\"hljs-comment\">//使设置的属性平均分配到每个位置上，使得不会某个链条过长。</span>\nMymap.prototype.hash = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">key</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> key == <span class=\"hljs-string\">\"string\"</span>) {\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">3</span>; i++) {\n            index = index + <span class=\"hljs-built_in\">isNaN</span>(key.charCodeAt(i)) ? <span class=\"hljs-number\">0</span> : key.charCodeAt(i);\n        }\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> key == <span class=\"hljs-string\">'object'</span>) {\n        index = <span class=\"hljs-number\">0</span>;\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> key == <span class=\"hljs-string\">'number'</span>) {\n        index = <span class=\"hljs-built_in\">isNaN</span>(key) ? <span class=\"hljs-number\">7</span> : key;\n    } <span class=\"hljs-keyword\">else</span> {\n        index = <span class=\"hljs-number\">1</span>;\n    }\n\n    <span class=\"hljs-keyword\">return</span> index % <span class=\"hljs-number\">8</span>;\n}\nMymap.prototype.toString = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'toString'</span>)\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">213</span>\n}\nMymap.prototype.valueOf = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'valueOf'</span>)\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">456</span>;\n}\n\n<span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-keyword\">new</span> Mymap();    <span class=\"hljs-comment\">//使用构造函数的方式实例化map</span>\n\nmap.set(<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'zwq'</span>);\n<span class=\"hljs-built_in\">console</span>.log(map.get(<span class=\"hljs-string\">'name'</span>));\n<span class=\"hljs-built_in\">console</span>.log(map.has(<span class=\"hljs-string\">'name'</span>));\nmap.set(<span class=\"hljs-string\">'nam123'</span>, <span class=\"hljs-string\">'123'</span>)\n<span class=\"hljs-comment\">// console.log(map)</span>\n<span class=\"hljs-built_in\">console</span>.log(map.get(<span class=\"hljs-string\">'name'</span>))\n<span class=\"hljs-built_in\">console</span>.log(map.get(<span class=\"hljs-string\">'nam123'</span>))\n<span class=\"hljs-comment\">// console.log(map.tong[5])</span>\n<span class=\"hljs-keyword\">let</span> a = {<span class=\"hljs-attr\">jkl</span>: <span class=\"hljs-string\">'jkl'</span>}\nmap.set(a, <span class=\"hljs-number\">1</span>)\n<span class=\"hljs-built_in\">console</span>.log( <span class=\"hljs-built_in\">JSON</span>.stringify(map, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">4</span>))\nmap.set(a,<span class=\"hljs-number\">2</span>)\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-built_in\">JSON</span>.stringify(map, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">4</span>))\n<span class=\"hljs-comment\">// map.delete('123')</span>\n<span class=\"hljs-comment\">// console.log(JSON.stringify(map, null, 4))</span>\n<span class=\"hljs-built_in\">console</span>.log(map.clear())\n<span class=\"hljs-built_in\">console</span>.log(map.get(<span class=\"hljs-string\">'name'</span>))\n</code> </pre>"}},"__N_SSG":true}