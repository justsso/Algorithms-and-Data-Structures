{"pageProps":{"post":{"date":"2021 / 3 / 1","slug":"15. 三数之和.js","content":"<pre> <code class=\"hljs\" ><span class=\"hljs-comment\">/**\n * @description\n * @author justsso\n */</span>\n<span class=\"hljs-comment\">/*\n给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。\n\n注意：答案中不可以包含重复的三元组。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/3sum\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n思路：先从小到大排序。遍历元素，然后设置两个指针，一旦遍历到元素大于0就不遍历了，因为后边的元素更大，不可能出现三数为0的现象\n\n */</span>\n\n<span class=\"hljs-comment\">/**\n * @param {number[]} nums\n * @return {number[][]}\n */</span>\nvar threeSum = <span class=\"hljs-keyword\">function</span><span class=\"hljs-function\"> (<span class=\"hljs-params\">nums)</span> { //[0, 0, 0, 0]\n    <span class=\"hljs-params\">let result = []\n</span>    <span class=\"hljs-params\">nums.sort((a,</span> <span class=\"hljs-params\">b)</span> =&gt;</span> a - b)  <span class=\"hljs-comment\">//先排序，以防出现重复的结果</span>\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; nums.length<span class=\"hljs-operator\"> &amp;&amp; </span>nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">i</span>]</span> &lt;= <span class=\"hljs-number\">0</span>; i++) {\n        <span class=\"hljs-comment\">//然后利用双指针，解决两数之和的问题</span>\n\n        <span class=\"hljs-keyword\">if</span> (i &gt; <span class=\"hljs-number\">0</span><span class=\"hljs-operator\"> &amp;&amp; </span>nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">i</span>]</span><span class=\"hljs-operator\"> === </span>nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">i</span> - <span class=\"hljs-number\">1</span>]</span>) continue   <span class=\"hljs-comment\">//和上一轮重复了呢</span>\n\n        <span class=\"hljs-comment\">//变成两数之和，双指针</span>\n\n        <span class=\"hljs-keyword\">let</span> r = two<span class=\"hljs-constructor\">Sum(<span class=\"hljs-params\">nums</span>, <span class=\"hljs-params\">i</span> + 1, <span class=\"hljs-params\">nums</span>.<span class=\"hljs-params\">length</span> - 1, 0 - <span class=\"hljs-params\">nums</span>[<span class=\"hljs-params\">i</span>])</span>\n        result = result.concat(r)\n    }\n    return result\n};\n\n<span class=\"hljs-comment\">//利用双指针，从start到end查找和为sum的两个数，找到所有两数之和</span>\n<span class=\"hljs-keyword\">function</span> two<span class=\"hljs-constructor\">Sum(<span class=\"hljs-params\">nums</span>, <span class=\"hljs-params\">start</span>, <span class=\"hljs-params\">end</span>, <span class=\"hljs-params\">sum</span>)</span> {\n    <span class=\"hljs-keyword\">let</span> r = <span class=\"hljs-literal\">[]</span>\n    <span class=\"hljs-comment\">//符合条件的可能有多组，[-4, 【-1】, -1, 0, 1, 2]</span>\n\n    <span class=\"hljs-keyword\">while</span> (start &lt; <span class=\"hljs-keyword\">end</span>) {\n        <span class=\"hljs-keyword\">if</span> ((nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">start</span>]</span> + nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">end</span>]</span>)<span class=\"hljs-operator\"> === </span>sum) {\n            r.push(<span class=\"hljs-literal\">[<span class=\"hljs-number\">0</span> - <span class=\"hljs-identifier\">sum</span>, <span class=\"hljs-identifier\">nums</span>[<span class=\"hljs-identifier\">start</span>]</span>, nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">end</span>]</span>])\n            <span class=\"hljs-keyword\">while</span> (nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">start</span> + <span class=\"hljs-number\">1</span>]</span><span class=\"hljs-operator\"> === </span>nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">start</span>]</span>) {\n                start++\n            }\n            start++\n            <span class=\"hljs-keyword\">while</span> (nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">end</span> - <span class=\"hljs-number\">1</span>]</span><span class=\"hljs-operator\"> === </span>nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">end</span>]</span>) {\n                <span class=\"hljs-keyword\">end</span>--\n            }\n            <span class=\"hljs-keyword\">end</span>--\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">start</span>]</span> + nums<span class=\"hljs-literal\">[<span class=\"hljs-identifier\">end</span>]</span>) &lt; sum) {\n            start++\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">end</span>--\n        }\n    }\n    return r;\n}\n\n<span class=\"hljs-comment\">// let nums = [-1, 0, 1, 2, -1, -4]  //[-4, -1, -1, 0, 1, 2]</span>\n<span class=\"hljs-comment\">// let r = threeSum(nums)</span>\n<span class=\"hljs-comment\">// console.log(r)</span>\n\n<span class=\"hljs-keyword\">let</span> nums2 = <span class=\"hljs-literal\">[<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>]</span>  <span class=\"hljs-comment\">// [0, 0, 0]</span>\n<span class=\"hljs-keyword\">let</span> r2 = three<span class=\"hljs-constructor\">Sum(<span class=\"hljs-params\">nums2</span>)</span>\nconsole.log(r2)\n\n<span class=\"hljs-comment\">// let nums3 = [0, 0, 0, 0]</span>\n<span class=\"hljs-comment\">// let r3 = threeSum(nums3)</span>\n<span class=\"hljs-comment\">// console.log(r3)</span>\n</code> </pre>"}},"__N_SSG":true}