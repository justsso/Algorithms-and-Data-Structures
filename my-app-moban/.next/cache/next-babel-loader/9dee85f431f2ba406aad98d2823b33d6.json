{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport Container from '../../components/container';\nimport PostBody from '../../components/post-body';\nimport Header from '../../components/header';\nimport PostHeader from '../../components/post-header';\nimport Layout from '../../components/layout';\nimport { getPostBySlug, getAllPosts } from '../../lib/api';\nimport PostTitle from '../../components/post-title';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../../lib/constants';\nimport markdownToHtml from '../../lib/markdownToHtml';\nimport Intro from \"../../components/intro\";\nexport default function Post({\n  post,\n  morePosts,\n  preview\n}) {\n  const router = useRouter();\n  console.log(router.query, 'router.query');\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404\n    });\n  }\n\n  return __jsx(Layout, {\n    preview: preview\n  }, __jsx(Container, null, __jsx(Intro, null), router.isFallback ? __jsx(PostTitle, null, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"mb-32\"\n  }, __jsx(Head, null, __jsx(\"title\", null, post.slug, \" | Next.js Blog Example with \", CMS_NAME), post.omImage && __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.ogImage.url\n  })), __jsx(PostHeader, {\n    slug: post.slug,\n    date: post.date\n  }), __jsx(PostBody, {\n    content: post.content\n  })))));\n}\nexport async function getStaticProps({\n  params\n}) {\n  console.log(params, 'params');\n  const post = getPostBySlug(params.slug, ['date', 'slug', 'content']);\n  const suffix = params.slug.slice(params.slug.lastIndexOf('.'));\n  let content;\n\n  if (suffix === '.md') {\n    content = await markdownToHtml(post.content || '');\n  } else {\n    content = `<pre> <code class=\"hljs\" >${post.content}</code> </pre>`;\n  }\n\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const {\n    posts2\n  } = getAllPosts(['slug', 'date']); //预渲染所有的指定的 js md文件。文件名带有后缀的\n\n  return {\n    paths: posts2.map(posts => {\n      return {\n        params: {\n          slug: posts.slug\n        }\n      };\n    }),\n    fallback: true\n  };\n}","map":null,"metadata":{},"sourceType":"module"}