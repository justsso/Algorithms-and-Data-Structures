{"ast":null,"code":"import fs from 'fs';\nimport { join } from 'path';\nimport matter from 'gray-matter';\n\nconst hljs = require('highlight.js');\n\nconst postsDirectory = join(process.cwd(), '_posts');\nexport function getPostSlugs() {\n  return fs.readdirSync(postsDirectory);\n}\nexport function getPostBySlug(slug, fields = []) {\n  const realSlug = slug;\n  const suffix = slug.slice(slug.lastIndexOf('.'));\n  const fullPath = join(postsDirectory, `${realSlug}`);\n  const fileContents = fs.readFileSync(fullPath, 'utf8');\n  let items = {};\n\n  if (suffix === '.md') {\n    const {\n      data,\n      content\n    } = matter(fileContents); // Ensure only the minimal needed data is exposed\n\n    fields.forEach(field => {\n      if (field === 'slug') {\n        items[field] = realSlug;\n      }\n\n      if (field === 'content') {\n        items[field] = content;\n      }\n\n      if (data[field]) {\n        items[field] = data[field];\n      }\n    });\n  } else {\n    //返回js文件内容\n    items.slug = slug;\n    items.title = slug; // items.date = new Date()\n\n    const highlightedCode = hljs.highlightAuto(fileContents).value;\n    items.content = highlightedCode;\n  }\n\n  return items;\n}\nexport function getAllPosts(fields = []) {\n  const slugs = getPostSlugs();\n  console.log(slugs, 49);\n  const posts = slugs.map(slug => getPostBySlug(slug, fields)) // sort posts by date in descending order\n  .sort((post1, post2) => post1.date > post2.date ? '-1' : '1');\n  return posts;\n}","map":{"version":3,"sources":["/Users/ssojust/gitproject/Algorithms-and-Data-Structures/my-app-moban/lib/api.js"],"names":["fs","join","matter","hljs","require","postsDirectory","process","cwd","getPostSlugs","readdirSync","getPostBySlug","slug","fields","realSlug","suffix","slice","lastIndexOf","fullPath","fileContents","readFileSync","items","data","content","forEach","field","title","highlightedCode","highlightAuto","value","getAllPosts","slugs","console","log","posts","map","sort","post1","post2","date"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,cAAD,CAApB;;AACA,MAAMC,cAAc,GAAGJ,IAAI,CAACK,OAAO,CAACC,GAAR,EAAD,EAAgB,QAAhB,CAA3B;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAOR,EAAE,CAACS,WAAH,CAAeJ,cAAf,CAAP;AACH;AAED,OAAO,SAASK,aAAT,CAAuBC,IAAvB,EAA6BC,MAAM,GAAG,EAAtC,EAA0C;AAC7C,QAAMC,QAAQ,GAAGF,IAAjB;AACA,QAAMG,MAAM,GAAIH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,WAAL,CAAiB,GAAjB,CAAX,CAAhB;AACA,QAAMC,QAAQ,GAAGhB,IAAI,CAACI,cAAD,EAAkB,GAAEQ,QAAS,EAA7B,CAArB;AACA,QAAMK,YAAY,GAAGlB,EAAE,CAACmB,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAArB;AACA,MAAIG,KAAK,GAAG,EAAZ;;AACA,MAAGN,MAAM,KAAK,KAAd,EAAoB;AAChB,UAAM;AAACO,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAkBpB,MAAM,CAACgB,YAAD,CAA9B,CADgB,CAEhB;;AACAN,IAAAA,MAAM,CAACW,OAAP,CAAeC,KAAK,IAAI;AACpB,UAAIA,KAAK,KAAK,MAAd,EAAsB;AAClBJ,QAAAA,KAAK,CAACI,KAAD,CAAL,GAAeX,QAAf;AACH;;AACD,UAAIW,KAAK,KAAK,SAAd,EAAyB;AACrBJ,QAAAA,KAAK,CAACI,KAAD,CAAL,GAAeF,OAAf;AACH;;AAED,UAAID,IAAI,CAACG,KAAD,CAAR,EAAiB;AACbJ,QAAAA,KAAK,CAACI,KAAD,CAAL,GAAeH,IAAI,CAACG,KAAD,CAAnB;AACH;AACJ,KAXD;AAYH,GAfD,MAeM;AACF;AAEAJ,IAAAA,KAAK,CAACT,IAAN,GAAaA,IAAb;AACAS,IAAAA,KAAK,CAACK,KAAN,GAAcd,IAAd,CAJE,CAKF;;AACA,UAAMe,eAAe,GACpBvB,IAAI,CAACwB,aAAL,CAAmBT,YAAnB,EAAiCU,KADlC;AAEAR,IAAAA,KAAK,CAACE,OAAN,GAAgBI,eAAhB;AAEH;;AAED,SAAON,KAAP;AACH;AAED,OAAO,SAASS,WAAT,CAAqBjB,MAAM,GAAG,EAA9B,EAAkC;AACrC,QAAMkB,KAAK,GAAGtB,YAAY,EAA1B;AACAuB,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,EAAnB;AACA,QAAMG,KAAK,GAAGH,KAAK,CACdI,GADS,CACLvB,IAAI,IAAID,aAAa,CAACC,IAAD,EAAOC,MAAP,CADhB,EAEV;AAFU,GAGTuB,IAHS,CAGJ,CAACC,KAAD,EAAQC,KAAR,KAAmBD,KAAK,CAACE,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,IAA1B,GAAiC,GAHhD,CAAd;AAIA,SAAOL,KAAP;AACH","sourcesContent":["import fs from 'fs'\nimport {join} from 'path'\nimport matter from 'gray-matter'\nconst hljs = require('highlight.js');\nconst postsDirectory = join(process.cwd(), '_posts')\n\nexport function getPostSlugs() {\n    return fs.readdirSync(postsDirectory)\n}\n\nexport function getPostBySlug(slug, fields = []) {\n    const realSlug = slug\n    const suffix =  slug.slice(slug.lastIndexOf('.'))\n    const fullPath = join(postsDirectory, `${realSlug}`)\n    const fileContents = fs.readFileSync(fullPath, 'utf8')\n    let items = {}\n    if(suffix === '.md'){\n        const {data, content} = matter(fileContents)\n        // Ensure only the minimal needed data is exposed\n        fields.forEach(field => {\n            if (field === 'slug') {\n                items[field] = realSlug\n            }\n            if (field === 'content') {\n                items[field] = content\n            }\n\n            if (data[field]) {\n                items[field] = data[field]\n            }\n        })\n    }else {\n        //返回js文件内容\n\n        items.slug = slug\n        items.title = slug\n        // items.date = new Date()\n        const highlightedCode =\n         hljs.highlightAuto(fileContents).value\n        items.content = highlightedCode\n\n    }\n\n    return items\n}\n\nexport function getAllPosts(fields = []) {\n    const slugs = getPostSlugs()\n    console.log(slugs, 49)\n    const posts = slugs\n        .map(slug => getPostBySlug(slug, fields))\n        // sort posts by date in descending order\n        .sort((post1, post2) => (post1.date > post2.date ? '-1' : '1'))\n    return posts\n}\n\n"]},"metadata":{},"sourceType":"module"}