{"ast":null,"code":"import fs from 'fs';\nimport { join } from 'path';\nimport matter from 'gray-matter';\n\nconst hljs = require('highlight.js');\n\nconst data_struturesDirectory = join(process.cwd(), '../data_structures/');\nconst leetcode_jsDirectory = join(process.cwd(), '../leetcode_js/'); //返回两类\n\nexport function getPostSlugs() {\n  // return fs.readdirSync(postsDirectory)\n  let files = fs.readdirSync(data_struturesDirectory);\n  let files2 = fs.readdirSync(leetcode_jsDirectory);\n  return {\n    data_strutures: files,\n    leetcode: files2\n  };\n}\nexport function getPostBySlug(slug, fields = []) {\n  const realSlug = slug;\n  const suffix = slug.slice(slug.lastIndexOf('.')); // const fullPath = join(postsDirectory, `${realSlug}`)\n\n  let fileContents;\n  const stat = fs.statSync(leetcode_jsDirectory + slug);\n  const isDirectory = stat.isDirectory();\n\n  if (!isDirectory) {\n    fileContents = fs.readFileSync(leetcode_jsDirectory + slug, 'utf8');\n  }\n\n  let items = {};\n\n  if (suffix === '.md') {\n    const {\n      data,\n      content\n    } = matter(fileContents); // Ensure only the minimal needed data is exposed\n\n    fields.forEach(field => {\n      if (field === 'slug') {\n        items[field] = realSlug;\n      }\n\n      if (field === 'content') {\n        items[field] = content;\n      }\n\n      if (data[field] === 'date') {\n        let stat = fs.statSync(); // items[field] = data[field]\n\n        items[field] = `${stat.birthtime.getFullYear()} / ${stat.birthtime.getMonth() + 1} / ${stat.birthtime.getDate()}`;\n      }\n    });\n  } else if (suffix === '.js') {\n    //返回js文件内容\n    fields.forEach(field => {\n      if (field === 'slug') {\n        items[field] = slug;\n      }\n\n      if (field === 'content') {\n        const highlightedCode = hljs.highlightAuto(fileContents).value;\n        items[field] = highlightedCode;\n      }\n\n      if (field === 'date') {\n        // items[field] = stat.birthtime.getTime()\n        items[field] = `${stat.birthtime.getFullYear()} / ${stat.birthtime.getMonth() + 1} / ${stat.birthtime.getDate()}`;\n      }\n    });\n  }\n\n  return items;\n}\nexport function getAllPosts(fields = []) {\n  const {\n    data_strutures,\n    leetcode\n  } = getPostSlugs();\n  console.log(data_strutures, leetcode, 68);\n  const posts1 = data_strutures.map(slug => getPostBySlug(slug, fields)) // sort leetcode by date in descending order\n  .sort((post1, post2) => post1.date > post2.date ? '-1' : '1');\n  const posts2 = leetcode.map(item => getPostBySlug(item, fields)).sort((post1, post2) => post1.date > post2.date ? '-1' : '1');\n  return {\n    posts1,\n    posts2\n  };\n}","map":null,"metadata":{},"sourceType":"module"}