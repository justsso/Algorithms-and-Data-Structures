{"ast":null,"code":"import fs from 'fs';\nimport { join } from 'path';\nimport matter from 'gray-matter';\n\nconst hljs = require('highlight.js');\n\nconst postsDirectory = join(process.cwd(), '_posts');\nexport function getPostSlugs() {\n  return fs.readdirSync(postsDirectory);\n}\nexport function getPostBySlug(slug, fields = []) {\n  const realSlug = slug;\n  const suffix = slug.slice(slug.lastIndexOf('.'));\n  const fullPath = join(postsDirectory, `${realSlug}`);\n  const fileContents = fs.readFileSync(fullPath, 'utf8');\n  let items = {};\n\n  if (suffix === '.md') {\n    const {\n      data,\n      content\n    } = matter(fileContents); // Ensure only the minimal needed data is exposed\n\n    fields.forEach(field => {\n      if (field === 'slug') {\n        items[field] = realSlug;\n      }\n\n      if (field === 'content') {\n        items[field] = content;\n      }\n\n      if (data[field]) {\n        items[field] = data[field];\n      }\n    });\n  } else {\n    //返回js文件内容\n    items.slug = slug;\n    items.title = slug; // items.date = new Date()\n\n    const highlightedCode = hljs.highlightAuto(fileContents).value;\n    items.content = highlightedCode;\n  }\n\n  return items;\n}\nexport function getAllPosts(fields = []) {\n  const slugs = getPostSlugs();\n  console.log(slugs, 49);\n  const posts = slugs.map(slug => getPostBySlug(slug, fields)) // sort posts by date in descending order\n  .sort((post1, post2) => post1.date > post2.date ? '-1' : '1');\n  return posts;\n}","map":null,"metadata":{},"sourceType":"module"}