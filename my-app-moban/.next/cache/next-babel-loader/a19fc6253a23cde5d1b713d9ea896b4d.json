{"ast":null,"code":"var _jsxFileName = \"/Users/ssojust/gitproject/Algorithms-and-Data-Structures/my-app-moban/pages/posts/[...slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport Container from '../../components/container';\nimport PostBody from '../../components/post-body';\nimport Header from '../../components/header';\nimport PostHeader from '../../components/post-header';\nimport Layout from '../../components/layout';\nimport { getPostBySlug, getAllPosts } from '../../lib/api';\nimport PostTitle from '../../components/post-title';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../../lib/constants';\nimport markdownToHtml from '../../lib/markdownToHtml';\nexport default function Post({\n  post,\n  morePosts,\n  preview\n}) {\n  const router = useRouter();\n  console.log(router.query, 'router.query');\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    preview: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), router.isFallback ? __jsx(PostTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"mb-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  }, post.title || post.slug, \" | Next.js Blog Example with \", CMS_NAME), post.omImage && __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.ogImage.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 50\n    }\n  })), __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverImage,\n    date: post.date,\n    author: post.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }), __jsx(PostBody, {\n    content: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  })))));\n}\nexport async function getStaticProps({\n  params\n}) {\n  console.log(params, 'params');\n  const post = getPostBySlug(params.slug, ['title', 'date', 'slug', 'author', 'content', 'ogImage', 'coverImage']);\n  const suffix = params.slug.slice(params.slug.lastIndexOf('.'));\n  let content;\n\n  if (suffix === '.md') {\n    content = await markdownToHtml(post.content || '');\n  } else {\n    content = `<pre> <code class=\"hljs\" >${post.content}</code> </pre>`;\n  }\n\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n} // export async function getStaticPaths() {\n//     const posts = getAllPosts(['...slug'])\n//     //预渲染所有的指定的 js md文件。文件名带有后缀的\n//\n//     return {\n//         paths: posts.map(posts => {\n//             return {\n//                 params: {\n//                     slug: posts.slug,\n//                 },\n//             }\n//         }),\n//         fallback: false,\n//     }\n// }","map":{"version":3,"sources":["/Users/ssojust/gitproject/Algorithms-and-Data-Structures/my-app-moban/pages/posts/[...slug].js"],"names":["useRouter","ErrorPage","Container","PostBody","Header","PostHeader","Layout","getPostBySlug","getAllPosts","PostTitle","Head","CMS_NAME","markdownToHtml","Post","post","morePosts","preview","router","console","log","query","isFallback","slug","title","omImage","ogImage","url","coverImage","date","author","content","getStaticProps","params","suffix","slice","lastIndexOf","props"],"mappings":"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","sourcesContent":["import {useRouter} from 'next/router'\nimport ErrorPage from 'next/error'\nimport Container from '../../components/container'\nimport PostBody from '../../components/post-body'\nimport Header from '../../components/header'\nimport PostHeader from '../../components/post-header'\nimport Layout from '../../components/layout'\nimport {getPostBySlug, getAllPosts} from '../../lib/api'\nimport PostTitle from '../../components/post-title'\nimport Head from 'next/head'\nimport {CMS_NAME} from '../../lib/constants'\nimport markdownToHtml from '../../lib/markdownToHtml'\n\n\nexport default function Post({post, morePosts, preview}) {\n    const router = useRouter()\n    console.log(router.query, 'router.query')\n    if (!router.isFallback && !post?.slug) {\n        return <ErrorPage statusCode={404}/>\n    }\n    return (\n        <Layout preview={preview}>\n            <Container>\n                <Header/>\n                {router.isFallback ? (\n                    <PostTitle>Loading…</PostTitle>\n                ) : (\n                    <>\n                        <article className=\"mb-32\">\n                            <Head>\n                                <title>\n                                    {post.title || post.slug} | Next.js Blog Example with {CMS_NAME}\n                                </title>\n                                {post.omImage && <meta property=\"og:image\" content={post.ogImage.url}/>}\n                            </Head>\n                            <PostHeader\n                                title={post.title}\n                                coverImage={post.coverImage}\n                                date={post.date}\n                                author={post.author}\n                            />\n                            <PostBody content={post.content}/>\n                        </article>\n                    </>\n                )}\n            </Container>\n        </Layout>\n    )\n}\n\nexport async function getStaticProps({params}) {\n    console.log(params, 'params')\n    const post = getPostBySlug(params.slug, [\n        'title',\n        'date',\n        'slug',\n        'author',\n        'content',\n        'ogImage',\n        'coverImage',\n    ])\n    const suffix = params.slug.slice(params.slug.lastIndexOf('.'))\n    let content\n    if (suffix === '.md') {\n        content = await markdownToHtml(post.content || '')\n    } else {\n        content = `<pre> <code class=\"hljs\" >${post.content}</code> </pre>`\n    }\n\n    return {\n        props: {\n            post: {\n                ...post,\n                content,\n            },\n        },\n    }\n}\n\n// export async function getStaticPaths() {\n//     const posts = getAllPosts(['...slug'])\n//     //预渲染所有的指定的 js md文件。文件名带有后缀的\n//\n//     return {\n//         paths: posts.map(posts => {\n//             return {\n//                 params: {\n//                     slug: posts.slug,\n//                 },\n//             }\n//         }),\n//         fallback: false,\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}